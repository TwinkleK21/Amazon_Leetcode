// "static void main" must be defined in a public class.
public class Main {
    public static void main(String[] args) {
        System.out.println("Hello World!");
        List<debtRecord> record = new ArrayList<>();
        record.add(new debtRecord("Alex", "Blake", 2));
        record.add(new debtRecord("Blake", "Alex", 2));
        // record.add(new debtRecord("Casey", "Alex", 5));
        // record.add(new debtRecord("Blake", "Casey", 7));
        // record.add(new debtRecord("Alex", "Blake", 4));
        // record.add(new debtRecord("Alex", "Casey", 4));
        String[] result = smallestNegBal(record);
        for(String s : result){
            System.out.println(s);
        }
    }
    
    public static String[] smallestNegBal(List<debtRecord> record){
        HashMap<String, Integer> map = new HashMap<>();
        for(debtRecord r : record){
            map.put(r.borrower, map.getOrDefault(r.borrower, 0)-r.amount);
            map.put(r.lender, map.getOrDefault(r.lender, 0)+r.amount);
        }
        
        List<String> result = new ArrayList<>();
        int min = Integer.MAX_VALUE;
        for(Map.Entry<String, Integer> entry : map.entrySet()){
                min = Math.min(min, entry.getValue());
        }
        
        if(min >= 0){
            String[] res = new String[] {"Nobody has a negative balance"};
            return res;
        }
        
        for(Map.Entry<String, Integer> entry : map.entrySet()){
            if(entry.getValue() == min){
                result.add(entry.getKey());
            }
        }
        
        Collections.sort(result);
        
        String[] res = result.toArray(new String[0]);
        return res;
        }
}

   
class debtRecord {
    String borrower = "";
    String lender = "";
    int amount = 0;
    debtRecord(){
        //empty constructor
    }
    debtRecord(String borrower, String lender, int amount){
        //parametrized constructor
        this.borrower = borrower;
        this.lender = lender;
        this.amount = amount;
    }
    
}
